(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{106:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return b}));var n=a(3),i=a(7),r=(a(0),a(112)),o={id:"manage-bandwidth",title:"Define your bandwidth policy",sidebar_label:"Bandwidth management"},c={unversionedId:"manage-bandwidth",id:"manage-bandwidth",isDocsHomePage:!1,title:"Define your bandwidth policy",description:"By default, LiveData Migrator will use all network bandwidth available to the server unless a specific limit is applied. Follow the UI or CLI instructions to set bandwidth limits.",source:"@site/docs/manage-bandwidth.md",slug:"/manage-bandwidth",permalink:"/docs/manage-bandwidth",version:"current",sidebar_label:"Bandwidth management",sidebar:"someSidebar",previous:{title:"Manage migrations",permalink:"/docs/manage-migrations"},next:{title:"Connect metastores for metadata migrations (preview)",permalink:"/docs/connect-metastores"}},l=[{value:"Manage bandwidth with the UI",id:"manage-bandwidth-with-the-ui",children:[]},{value:"Manage bandwidth with the CLI",id:"manage-bandwidth-with-the-cli",children:[]}],d={toc:l};function b(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.a)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.a)("p",null,"By default, LiveData Migrator will use all network bandwidth available to the server unless a specific limit is applied. Follow the ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"#manage-bandwidth-with-the-ui"}),"UI")," or ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"#manage-bandwidth-with-the-cli"}),"CLI")," instructions to set bandwidth limits."),Object(r.a)("h2",{id:"manage-bandwidth-with-the-ui"},"Manage bandwidth with the UI"),Object(r.a)("p",null,"The Bandwidth panel shows how much bandwidth LiveData Migrator is currently using to migrate data. It shows this over the most recent 5 minute period and continually updates. The left axis scales automatically to accommodate the highest throughput during that period."),Object(r.a)("p",null,"To apply a bandwidth limit between the source and target storage(s), follow the steps below:"),Object(r.a)("ol",null,Object(r.a)("li",{parentName:"ol"},"In the ",Object(r.a)("strong",{parentName:"li"},"Storages")," list on the dashboard, click the settings for the appropriate storage."),Object(r.a)("li",{parentName:"ol"},"Select ",Object(r.a)("strong",{parentName:"li"},"Bandwidth Management")," under the ",Object(r.a)("em",{parentName:"li"},"Grouping")," list."),Object(r.a)("li",{parentName:"ol"},"Uncheck the ",Object(r.a)("strong",{parentName:"li"},"Unlimited")," option."),Object(r.a)("li",{parentName:"ol"},"Define the ",Object(r.a)("strong",{parentName:"li"},"Maximum bandwidth limit")," and ",Object(r.a)("strong",{parentName:"li"},"Unit")," (for example: MiB/s), and click ",Object(r.a)("strong",{parentName:"li"},"Apply"),".")),Object(r.a)("p",null,"You will need to define a bandwidth limit for each LiveData Migrator server (if you have more than one)."),Object(r.a)("h2",{id:"manage-bandwidth-with-the-cli"},"Manage bandwidth with the CLI"),Object(r.a)("p",null,"Limit the total amount of bandwidth LiveData Migrator can use by using the ",Object(r.a)("inlineCode",{parentName:"p"},"bandwidth policy")," command. Once defined, the bandwidth limit will apply immediately to all migrations (new and ongoing)."),Object(r.a)("p",null,"Only one bandwidth policy can be active at a time. The default policy is unlimited bandwidth."),Object(r.a)("table",null,Object(r.a)("thead",{parentName:"table"},Object(r.a)("tr",{parentName:"thead"},Object(r.a)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Command"),Object(r.a)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Action"))),Object(r.a)("tbody",{parentName:"table"},Object(r.a)("tr",{parentName:"tbody"},Object(r.a)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.a)("a",Object(n.a)({parentName:"td"},{href:"/docs/command-reference#bandwidth-policy-del"}),Object(r.a)("inlineCode",{parentName:"a"},"bandwidth policy del"))),Object(r.a)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Delete a bandwidth policy")),Object(r.a)("tr",{parentName:"tbody"},Object(r.a)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.a)("a",Object(n.a)({parentName:"td"},{href:"/docs/command-reference#bandwidth-policy-set"}),Object(r.a)("inlineCode",{parentName:"a"},"bandwidth policy set"))),Object(r.a)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Define the bandwidth policy")),Object(r.a)("tr",{parentName:"tbody"},Object(r.a)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.a)("a",Object(n.a)({parentName:"td"},{href:"/docs/command-reference#bandwidth-policy-show"}),Object(r.a)("inlineCode",{parentName:"a"},"bandwidth policy show"))),Object(r.a)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Get details for the current bandwidth policy")))))}b.isMDXComponent=!0},112:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=i.a.createContext({}),b=function(e){var t=i.a.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=b(a),h=n,s=m["".concat(o,".").concat(h)]||m[h]||p[h]||r;return a?i.a.createElement(s,c(c({ref:t},d),{},{components:a})):i.a.createElement(s,c({ref:t},d))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var d=2;d<r;d++)o[d]=a[d];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);