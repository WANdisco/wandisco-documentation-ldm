{"remainingRequest":"/Users/shonaisbister/repos/ldm/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/shonaisbister/repos/ldm/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/shonaisbister/repos/ldm/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/shonaisbister/repos/ldm/docs/quickstart.md","dependencies":[{"path":"/Users/shonaisbister/repos/ldm/docs/quickstart.md","mtime":1594811465011},{"path":"/Users/shonaisbister/repos/ldm/.docusaurus/docusaurus-plugin-content-docs/site-docs-quickstart-md-807.json","mtime":1596723822770},{"path":"/Users/shonaisbister/repos/ldm/node_modules/cache-loader/dist/cjs.js","mtime":1594811465847},{"path":"/Users/shonaisbister/repos/ldm/node_modules/babel-loader/lib/index.js","mtime":1594811465747},{"path":"/Users/shonaisbister/repos/ldm/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1594811465316},{"path":"/Users/shonaisbister/repos/ldm/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1594811465339}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}